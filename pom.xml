<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.bml</groupId>
    <artifactId>test-service</artifactId>
    <version>0.0.0.SNAPSHOT</version>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.6.RELEASE</version>
    </parent>

    <properties>
        <semVersion>0.0.0</semVersion>
        <docker.repository.name>brianmlima/${project.artifactId}</docker.repository.name>
        <version.number>${jgitver.calculated_version}</version.number>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- https://mvnrepository.com/artifact/com.eoniantech.build/slf4j-bom -->
            <dependency>
                <groupId>com.eoniantech.build</groupId>
                <artifactId>slf4j-bom</artifactId>
                <version>1.7.25</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson/jackson-bom -->
            <dependency>
                <groupId>com.fasterxml.jackson</groupId>
                <artifactId>jackson-bom</artifactId>
                <version>2.9.9</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>local</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <activeProfile>local</activeProfile>
            </properties>
            <build>
                <plugins>
                    <!-- ################################################################################################### -->
                    <!-- BEGIN DOCKER build and push -->
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.21.0</version>
                        <extensions>true</extensions>
                        <configuration>
                            <!-- a) use "docker login" up front to store the credentials on the local machine. -->
                            <images>
                                <image>
                                    <name>${docker.repository.name}:${version.number}</name>
                                    <build>
                                        <!-- define additional tags for the image -->
                                        <tags>
                                            <tag>latest</tag>
                                        </tags>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>build-docker-image</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- END DOCKER build and push -->
                    <!-- ################################################################################################### -->
                </plugins>
            </build>
        </profile>
        <profile>
            <id>ci</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <activeProfile>ci</activeProfile>
            </properties>
            <build>
                <plugins>
                    <!-- ################################################################################################### -->
                    <!-- BEGIN DOCKER build and push -->
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.21.0</version>
                        <extensions>true</extensions>
                        <configuration>
                            <!-- a) use "docker login" up front to store the credentials on the local machine. -->
                            <images>
                                <image>
                                    <name>${docker.repository.name}:${version.number}</name>
                                    <build>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>build-docker-image</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>push-docker-image-to-registry</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>push</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- END DOCKER build and push -->
                    <!-- ################################################################################################### -->
                </plugins>
            </build>
        </profile>
    </profiles>


    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/version.json</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/version.json</exclude>
                </excludes>
            </resource>
        </resources>
        <plugins>
            <!-- ################################################################################################### -->
            <!-- BEGIN Create version from the time and the commit hash -->
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>2.2.4</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <dateFormat>yyyyMMdd-HHmmss</dateFormat><!--  human-readable part of the version number -->
                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                    <generateGitPropertiesFile>false
                    </generateGitPropertiesFile><!-- somehow necessary. otherwise the variables are not available in the pom -->
                </configuration>
            </plugin>
            <!-- END Create version from the time and the commit hash -->
            <!-- ################################################################################################### -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <!--                        <phase>generate-resources</phase>-->
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <echo>Current active profile: ${activeProfile}</echo>
                                <echo>used version: ${jgitver.used_version}</echo>
                                <echo>version calculated: ${jgitver.calculated_version}</echo>
                                <echo>dirty: ${jgitver.dirty}</echo>
                                <echo>head_committer_name: ${jgitver.head_committer_name}</echo>
                                <echo>head_commiter_email: ${jgitver.head_commiter_email}</echo>
                                <echo>head_commit_datetime: ${jgitver.head_commit_datetime}</echo>
                                <echo>git_sha1_full: ${jgitver.git_sha1_full}</echo>
                                <echo>git_sha1_8: ${jgitver.git_sha1_8}</echo>
                                <echo>branch_name: ${jgitver.branch_name}</echo>
                                <echo>head_tags: ${jgitver.head_tags}</echo>
                                <echo>head_annotated_tags: ${jgitver.head_annotated_tags}</echo>
                                <echo>head_lightweight_tags: ${jgitver.head_lightweight_tags}</echo>
                                <echo>base_tag: ${jgitver.base_tag}</echo>
                                <echo>all_tags: ${jgitver.all_tags}</echo>
                                <echo>all_annotated_tags: ${jgitver.all_annotated_tags}</echo>
                                <echo>all_lightweight_tags: ${jgitver.all_lightweight_tags}</echo>
                                <echo>all_version_tags: ${jgitver.all_version_tags}</echo>
                                <echo>all_version_annotated_tags: ${jgitver.all_version_annotated_tags}</echo>
                                <echo>all_version_lightweight_tags: ${jgitver.all_version_lightweight_tags}</echo>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- Build an executable JAR -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>org.bml.TestService</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-install-plugin</artifactId>
                <configuration>
                    <skip>true</skip> <!-- we push the container image to the local registry instead -->
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip> <!--  we push the image instead  -->
                </configuration>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.9</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>28.0-jre</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.8</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
        </dependency>


        <!-- ####################################################################################################### -->
        <!-- BEGIN SPRING -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- END SPRING -->
        <!-- ####################################################################################################### -->

        <!-- ####################################################################################################### -->
        <!-- BEGIN SLF4j LOGGBACK -->
        <!-- Logging! NEVER ALLOW LOG4J-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-ext</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>


        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>log4j-bridge</artifactId>
            <version>0.9.7</version>
            <type>jar</type>
        </dependency>
        <!-- END SLF4j LOGGBACK -->
        <!-- ####################################################################################################### -->

        <!-- ####################################################################################################### -->
        <!-- BEGIN TEST DEPS -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>2.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.thedeanda</groupId>
            <artifactId>lorem</artifactId>
            <version>2.1</version>
            <scope>test</scope>
        </dependency>
        <!-- END TEST DEPS -->
        <!-- ####################################################################################################### -->

    </dependencies>


</project>